/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testSystem;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Scanner;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import panels.MultChoiceTestSystem;
import panels.TrueFalseTestSystem;

/**
 *
 * @author alex
 */
public class TestSelector extends javax.swing.JFrame {

    private ArrayList<Test> listOfTest;

    /**
     * Creates new form TestSelector
     */
    public TestSelector(ArrayList<Test> t) {
        listOfTest = t;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Test1");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Test2");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Test System ");

        jButton1.setText("Take Test");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(28, 28, 28))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jButton1)))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jRadioButton1)
                .addGap(26, 26, 26)
                .addComponent(jRadioButton2)
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        final String answerSelected = getSelectedButtonText(buttonGroup1);
        if (answerSelected.equals("Test1")) {
            /* Create and display the form */

            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new TrueFalseTestSystem(getTest(answerSelected)).setVisible(true);
                }
            });
        } else if (answerSelected.equals("Test2")) {
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new MultChoiceTestSystem(getTest(answerSelected)).setVisible(true);
                }
            });
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private Test getTest(String nameOfTest) {
        for (int i = 0; i < listOfTest.size(); i++) {
            if (listOfTest.get(i).getName().equals(nameOfTest)) {
                return listOfTest.get(i);
            }
        }
        return null;
    }

    private String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /**
         * Must pass argument in order for it to work
        //</editor-fold>
        
        /**
         * Must pass argument in order for it to work
         */
    
        
       
        final ArrayList<Test> t = initTest(args[1], args[0]);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestSelector(t).setVisible(true);
            }
        });
    }

    public static ArrayList<Test> initTest(String args1, String args2) throws FileNotFoundException {

        ArrayList<TrueFalseQuestion> q = new ArrayList<TrueFalseQuestion>();
        ArrayList<MultChoiceQuestion> q1 = new ArrayList<MultChoiceQuestion>();
        ArrayList<Test> allTest = new ArrayList<Test>();

        String question;
        String answer;
        File trueFalseQuestions = new File(args1);
        Scanner readFromFile = new Scanner(trueFalseQuestions);

        while (readFromFile.hasNextLine()) {
            question = readFromFile.nextLine();
            answer = readData(readFromFile);
            q.add(new TrueFalseQuestion(answer, question));
        }
        readFromFile.close();

        TrueFalseTest t1 = new TrueFalseTest(q, "Test1", "Java Class", 1);

        File multChoiceQuestions = new File(args2);
        readFromFile = new Scanner(multChoiceQuestions);
        String choice1;
        String choice2;
        String choice3;
        String choice4;
        while (readFromFile.hasNextLine()) {
            question = readFromFile.nextLine();
            choice1 = readData(readFromFile);
            choice2 = readData(readFromFile);
            choice3 = readData(readFromFile);
            choice4 = readData(readFromFile);
            answer = readData(readFromFile);

            ArrayList<String> choices = new ArrayList<>();
            choices.add(choice1);
            choices.add(choice2);
            choices.add(choice3);
            choices.add(choice4);
            q1.add(new MultChoiceQuestion(question, answer, choices));
        }

        readFromFile.close();
        MultipleChoiceTest t2 = new MultipleChoiceTest(q1, "Test2", "Java S", 2);

        allTest.add(t1);
        allTest.add(t2);
        
        return allTest;
    }

    /**
     * If we decide to read more data from one of the questions.
     *
     * @param s
     * @return
     */
    public static String readData(Scanner s) {
        String rtrString = null;
        if (s.hasNextLine()) {
            rtrString = s.nextLine();
        } else {
            System.out.println("Data has been corrupted\n");
            System.exit(0);
        }

        return rtrString;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    // End of variables declaration//GEN-END:variables
}
